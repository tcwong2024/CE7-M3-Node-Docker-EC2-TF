name: Docker Create
run-name: Running Docker Image Creation by ${{ github.actor }}

env: 
  IMAGE_NAME: wtc-node-docker-app

on:
  push:
    branches:
      - main
    paths:
      - files/**

jobs:
  Get-Tag:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.get_latest_tag.outputs.LATEST_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: | 
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> "$GITHUB_OUTPUT"
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Output Latest Tag
        run: echo "The latest tag is ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"

  Docker-Image-Create-And-Publish:
    runs-on: ubuntu-latest
    needs: Get-Tag
    outputs:
      status: ${{ job.status }}
    defaults:
      run:
        working-directory: files

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/sctp-sandbox
  
    - name: Docker build and tag
      run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ needs.Get-Tag.outputs.LATEST_TAG }}.${{ github.run_number }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ needs.Get-Tag.outputs.LATEST_TAG }}.${{ github.run_number }} public.ecr.aws/sctp-sandbox/${{ env.IMAGE_NAME }}:${{ needs.Get-Tag.outputs.LATEST_TAG }}.${{ github.run_number }}
  
    - name: Docker publish to ECR
      run: docker push public.ecr.aws/sctp-sandbox/${{ env.IMAGE_NAME }}:${{ needs.Get-Tag.outputs.LATEST_TAG }}.${{ github.run_number }}

  Summary:
    needs: [Docker-Image-Create-And-Publish]
    runs-on: ubuntu-latest
    steps:
      - name: Adding markdown
        run: |
          DOCKER_STATUS=${{ needs.Docker-Image-Create-And-Publish.outputs.status }}

          echo '## ðŸš€ Preparing Build Summary ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo "| Job Name        | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| docker-build       | $DOCKER_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo "| docker-push       | $DOCKER_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo '## Job ran by: ${{ github.actor }}' >> $GITHUB_STEP_SUMMARY